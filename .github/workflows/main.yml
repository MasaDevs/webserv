name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  clang-tools:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cache Clang Tools
      uses: actions/cache@v2
      with:
        path: /usr/bin/clang-tidy
        key: clang-tidy-${{ runner.os }}

    - name: Install Clang Tools
      if: steps.cache.outputs.cache-hit != 'true'
      run: sudo apt-get install clang-tidy

    - name: Run clang-tidy
      run: |
        find ./srcs -name '*.cpp' -or -name '*.hpp' | while read file; do
            clang-tidy $file -- -Wall -Wextra -Werror -std=c++98
        done

  cppcheck-analysis:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cache cppcheck
      uses: actions/cache@v2
      with:
        path: /usr/bin/cppcheck
        key: cppcheck-${{ runner.os }}

    - name: Install cppcheck
      if: steps.cache.outputs.cache-hit != 'true'
      run: sudo apt-get install cppcheck

    - name: Run cppcheck
      run: cppcheck --enable=all --error-exitcode=1 --inconclusive --force  --suppress=unusedFunction --suppress=unmatchedSuppression --suppress=missingIncludeSystem --std=c++11 ./

    - name: Upload cppcheck report
      uses: actions/upload-artifact@v2
      with:
        name: cppcheck-report
        path: cppcheck.txt

  google-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cache Google Test Build
      uses: actions/cache@v2
      id: gtest-cache
      with:
        path: third_party/gtest
        key: gtest-${{ runner.os }}-${GOOGLETEST_VERSION}

    - name: Install required packages
      if: steps.gtest-cache.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update
        sudo apt-get install -y wget cmake

    - name: Build Google Test
      if: steps.gtest-cache.outputs.cache-hit != 'true'
      run: |
        set -eu

        GOOGLETEST_VERSION="v1.14.0"
        GOOGLEDIR="googletest-1.14.0"

        mkdir -p third_party/
        pushd third_party/
        mkdir gtest
        wget --quiet https://github.com/google/googletest/archive/refs/tags/${GOOGLETEST_VERSION}.tar.gz
        tar -xf ${GOOGLETEST_VERSION}.tar.gz
        rm ${GOOGLETEST_VERSION}.tar.gz
        cd ${GOOGLEDIR}
        mkdir build/
        cd build/
        GPATH=$(pwd)
        cmake .. -DCMAKE_INSTALL_PREFIX=$GPATH/../../gtest
        make
        make install

    - name: Run Google Test
      run: |
        cd test
        make 

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: test/log/results.log
